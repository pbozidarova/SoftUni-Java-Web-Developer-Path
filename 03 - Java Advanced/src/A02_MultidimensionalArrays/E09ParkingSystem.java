package A02_MultidimensionalArrays;

public class E09ParkingSystem {
//    The parking lot in front of SoftUni is one of the busiest in the country, and it’s a common cause for
//    conflicts between the doorkeeper Bai Tzetzo and the students. The SoftUni team wants to proactively resolve
//    all conflicts, so an automated parking system should be implemented. They are organizing a competition –
//    Parkoniada – and the author of the best parking system will win a romantic dinner with RoYaL. That’s exactly
//    what you’ve been dreaming of, so you decide to join in.
//    The parking lot is a rectangular matrix where the first column is always free and all other cells are parking
//    spots. A car can enter from any cell of the first column and then decides to go to a specific spot. If that spot
//    is not free, the car searches for the closest free spot on the same row. If all the cells on that specific row
//    are used, the car cannot park and leaves. If two free cells are located at the same distance from the initial
//    parking spot, the cell which is closer to the entrance is preferred. A car can pass through a used parking spot.

//    Your task is to calculate the distance travelled by each car to its parking spot.
//    Example: A car enters the parking at row 1. It wants to go to cell 2, 2 so it moves through exactly
//    four cells to reach its parking spot.

    public static void main(String[] args) {

    }
}
